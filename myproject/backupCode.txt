from pydub import AudioSegment

def pitch_shift(audio, semitones):
    # Adjust sample rate to shift pitch
    new_sample_rate = int(audio.frame_rate * (2.0 ** (semitones / 12.0)))
    return audio._spawn(audio.raw_data, overrides={'frame_rate': new_sample_rate}).set_frame_rate(audio.frame_rate)

# 3 Ouputs
# Sped up
# Slowed
# Overslowed

try:
    audio = AudioSegment.from_file("FileProcessing/file_processing_sped_up.mp3", "mp3")
except:
    audio = AudioSegment.from_file("FileProcessing/file_processing_sped_up.mp3", format="mp4")

sped_up_audio = audio.speedup(playback_speed=1.1)
slowed_audio = pitch_shift(audio, -1)
overslowed_audio = pitch_shift(audio, -3)

sped_up_audio.export("FileProcessing/file_processing_sped_up.mp3", format="mp3")
slowed_audio.export("FileProcessing/file_processing_slowed_down.mp3", format="mp3")
overslowed_audio.export("FileProcessing/file_processing_overslowed.mp3", format="mp3")